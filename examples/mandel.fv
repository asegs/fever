import ../lib/std
import ../lib/math
r_height = 58
r_width = floor (r_height * (4 / 3) * 3)
r_scale = 3 / 1000
r_tx = 0 - (1400 / 1000)
r_ty = 0
mandel_x_min = 0 - 2 * r_scale + r_tx
mandel_x_max = 47 / 100 * r_scale + r_tx
mandel_y_min = 0 - 12 / 100 - 1 * r_scale + r_ty
mandel_y_max = 12 / 100 + 1 * r_scale + r_ty
iter_limit = 386
rescale a b c d x = (((x - a) * (d - c)) / (b - a)) + c
to_scaled_x n = rescale 0 r_width mandel_x_min mandel_x_max n
to_scaled_y n = rescale 0 r_height mandel_y_min mandel_y_max n
palette i = idx ["⠀","░","▒","▓","▓"] floor rescale 1 iter_limit 0 4 i
@i_mandel_iter xo yo x y i = (? ((x * x) + (y * y) <= 4) (mandel_iter xo yo ((x * x) - (y * y) + xo) (2 * x * y + yo) (i + 1)) (i))
mandel_iter xo yo x y 386 = 386
render_row yval = [0..r_width] -> mandel_iter to_scaled_x @ to_scaled_y yval 0 0 0 -> palette @ \> "" $ + @ -> show @
mandelbrot row_count = [0..row_count] -> render_row @
idx mandelbrot r_height 0